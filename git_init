1. git init - initiating a local repository
3. git config --global user.name 'Olga Makarova'
4. git config --global user.email 'olga.alex.makar@gmail.com'
5. git add test.sh - adding a file test.sh to our local repository
6. git status - to see what is in the staging area
7. git rm --cached test.sh - to remove the file from the staged area
8. git add .   - to add everything to the staging area
9. git commit   - adds a commit to a local repository
10. git commit -m 'comment' - to add a comment about our commit
11. touch .gitignore - to create a file where I will name those files that I don't
want to ever be added to the git repository
12. git branch MYBRANCH - to create an additional, non-master branch
13. git checkout MYBRANCH - so now we are in the MYBRANCH branch
14. we can make changes in a file and commit them in this branch and they will
not reflect in the same file in the master branch. 
15.When in the master branch:  git merge login - this command will merge our
changes in the other branch with the master branch.
16. Now we can go to github and create a repository. I named mine
Calculator_bash. No need to add a README file, as we already have .gitignore.
17. git remote - will list a remote repositor. In my case I have not added a
remote repository yet, so this command will display none.
18. git remote add origin https://github.com/Olala1389/Calculator_bash.git -
this will add the remote repository.
19. git push -u origin master - this will add our local repository files to the
remote origin repository.
20. Now we can make changes in local repository (don't forget to add and commit
these changes in the local repository) and push them to the remote repository
just by command: git push
